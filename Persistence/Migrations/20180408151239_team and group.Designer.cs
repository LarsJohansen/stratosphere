// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Persistence;
using System;

namespace Persistence.Migrations
{
    [DbContext(typeof(StratosphereContext))]
    [Migration("20180408151239_team and group")]
    partial class teamandgroup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Persistence.Entities.Competition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedAt");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("Persistence.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("FkCompetition");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FkCompetition");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Persistence.Entities.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("FkCompetition");

                    b.Property<long>("FkGroup");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FkCompetition");

                    b.HasIndex("FkGroup");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Persistence.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email")
                        .HasMaxLength(254);

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Firstname")
                        .HasMaxLength(100);

                    b.Property<string>("Lastname")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Persistence.Entities.UserLeague", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("FkCompetition");

                    b.Property<long>("FkUserAdmin");

                    b.Property<string>("LeagueIdentifier")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FkCompetition");

                    b.HasIndex("FkUserAdmin");

                    b.ToTable("UserLeagues");
                });

            modelBuilder.Entity("Persistence.Entities.UserOnLeague", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("FkUser");

                    b.Property<long>("FkUserLeague");

                    b.HasKey("Id");

                    b.HasIndex("FkUser");

                    b.HasIndex("FkUserLeague");

                    b.ToTable("UserOnLeagues");
                });

            modelBuilder.Entity("Persistence.Entities.Group", b =>
                {
                    b.HasOne("Persistence.Entities.Competition", "Competition")
                        .WithMany("Groups")
                        .HasForeignKey("FkCompetition")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Persistence.Entities.Team", b =>
                {
                    b.HasOne("Persistence.Entities.Competition", "Competition")
                        .WithMany("Teams")
                        .HasForeignKey("FkCompetition")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Persistence.Entities.Group", "Group")
                        .WithMany("Teams")
                        .HasForeignKey("FkGroup")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Persistence.Entities.UserLeague", b =>
                {
                    b.HasOne("Persistence.Entities.Competition", "Competition")
                        .WithMany("UserLeagues")
                        .HasForeignKey("FkCompetition")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Persistence.Entities.User", "UserAdmin")
                        .WithMany("UserLeaguesWhereAdmin")
                        .HasForeignKey("FkUserAdmin")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Persistence.Entities.UserOnLeague", b =>
                {
                    b.HasOne("Persistence.Entities.User", "User")
                        .WithMany("UserOnLeagues")
                        .HasForeignKey("FkUser")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Persistence.Entities.UserLeague", "UserLeague")
                        .WithMany("UserOnLeagues")
                        .HasForeignKey("FkUserLeague")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
